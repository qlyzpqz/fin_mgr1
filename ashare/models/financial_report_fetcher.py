from datetime import datetime, date
from decimal import Decimal
from typing import List, Optional
import tushare as ts
import pandas as pd
from ..models.financial_report import (
    FinancialReport, IncomeStatement, BalanceSheet,
    CashFlowStatement, FinancialIndicators
)

class FinancialReportFetcher:
    """财报同步类"""
    
    def __init__(self, token: str):
        """
        初始化财报同步器
        
        Args:
            token: Tushare API token
        """
        ts.set_token(token)
        self.pro = ts.pro_api()
        
    def _convert_date(self, date_str: str) -> date:
        """转换日期字符串为date对象"""
        if pd.isna(date_str):
            return None
        return datetime.strptime(date_str, '%Y%m%d').date()
    
    def _convert_date_to_str(self, d: date) -> str:
        """将date对象转换为tushare所需的日期字符串格式(YYYYMMDD)"""
        return d.strftime('%Y%m%d')
    
    def _convert_decimal(self, value) -> Optional[Decimal]:
        """转换数值为Decimal类型"""
        if pd.isna(value):
            return None
        return Decimal(str(value))
        
    def fetch_income_statement(self, ts_code: str, start_date: date, end_date: date) -> List[IncomeStatement]:
        """同步利润表数据"""
        df = self.pro.income(
            ts_code=ts_code,
            start_date=self._convert_date_to_str(start_date),
            end_date=self._convert_date_to_str(end_date),
            fields='ts_code,'
                'ann_date,'
                'f_ann_date,'
                'end_date,'
                'report_type,'
                'comp_type,'
                'end_type,'
                'basic_eps,'
                'diluted_eps,'
                'total_revenue,'
                'revenue,'
                'int_income,'
                'prem_earned,'
                'comm_income,'
                'n_commis_income,'
                'n_oth_income,'
                'n_oth_b_income,'
                'prem_income,'
                'out_prem,'
                'une_prem_reser,'
                'reins_income,'
                'n_sec_tb_income,'
                'n_sec_uw_income,'
                'n_asset_mg_income,'
                'oth_b_income,'
                'fv_value_chg_gain,'
                'invest_income,'
                'ass_invest_income,'
                'forex_gain,'
                'total_cogs,'
                'oper_cost,'
                'int_exp,'
                'comm_exp,'
                'biz_tax_surchg,'
                'sell_exp,'
                'admin_exp,'
                'fin_exp,'
                'assets_impair_loss,'
                'prem_refund,'
                'compens_payout,'
                'reser_insur_liab,'
                'div_payt,'
                'reins_exp,'
                'oper_exp,'
                'compens_payout_refu,'
                'insur_reser_refu,'
                'reins_cost_refund,'
                'other_bus_cost,'
                'operate_profit,'
                'non_oper_income,'
                'non_oper_exp,'
                'nca_disploss,'
                'total_profit,'
                'income_tax,'
                'n_income,'
                'n_income_attr_p,'
                'minority_gain,'
                'oth_compr_income,'
                't_compr_income,'
                'compr_inc_attr_p,'
                'compr_inc_attr_m_s,'
                'ebit,'
                'ebitda,'
                'insurance_exp,'
                'undist_profit,'
                'distable_profit,'
                'rd_exp,'
                'fin_exp_int_exp,'
                'fin_exp_int_inc,'
                'transfer_surplus_rese,'
                'transfer_housing_imprest,'
                'transfer_oth,'
                'adj_lossgain,'
                'withdra_legal_surplus,'
                'withdra_legal_pubfund,'
                'withdra_biz_devfund,'
                'withdra_rese_fund,'
                'withdra_oth_ersu,'
                'workers_welfare,'
                'distr_profit_shrhder,'
                'prfshare_payable_dvd,'
                'comshare_payable_dvd,'
                'capit_comstock_div,'
                'net_after_nr_lp_correct,'
                'credit_impa_loss,'
                'net_expo_hedging_benefits,'
                'oth_impair_loss_assets,'
                'total_opcost,'
                'amodcost_fin_assets,'
                'oth_income,'
                'asset_disp_income,'
                'continued_net_profit,'
                'end_net_profit,'
                'update_flag'
        )
        
        statements = []
        for _, row in df.iterrows():
            statement = IncomeStatement(
                ts_code=row['ts_code'],
                ann_date=self._convert_date(row['ann_date']),
                f_ann_date=self._convert_date(row['f_ann_date']),
                end_date=self._convert_date(row['end_date']),
                report_type=row['report_type'],
                comp_type=row['comp_type'],
                end_type=row['end_type'],
                basic_eps=self._convert_decimal(row['basic_eps']),
                diluted_eps=self._convert_decimal(row['diluted_eps']),
                total_revenue=self._convert_decimal(row['total_revenue']),
                revenue=self._convert_decimal(row['revenue']),
                int_income=self._convert_decimal(row['int_income']),
                prem_earned=self._convert_decimal(row['prem_earned']),
                comm_income=self._convert_decimal(row['comm_income']),
                n_commis_income=self._convert_decimal(row['n_commis_income']),
                n_oth_income=self._convert_decimal(row['n_oth_income']),
                n_oth_b_income=self._convert_decimal(row['n_oth_b_income']),
                prem_income=self._convert_decimal(row['prem_income']),
                out_prem=self._convert_decimal(row['out_prem']),
                une_prem_reser=self._convert_decimal(row['une_prem_reser']),
                reins_income=self._convert_decimal(row['reins_income']),
                n_sec_tb_income=self._convert_decimal(row['n_sec_tb_income']),
                n_sec_uw_income=self._convert_decimal(row['n_sec_uw_income']),
                n_asset_mg_income=self._convert_decimal(row['n_asset_mg_income']),
                oth_b_income=self._convert_decimal(row['oth_b_income']),
                fv_value_chg_gain=self._convert_decimal(row['fv_value_chg_gain']),
                invest_income=self._convert_decimal(row['invest_income']),
                ass_invest_income=self._convert_decimal(row['ass_invest_income']),
                forex_gain=self._convert_decimal(row['forex_gain']),
                total_cogs=self._convert_decimal(row['total_cogs']),
                oper_cost=self._convert_decimal(row['oper_cost']),
                int_exp=self._convert_decimal(row['int_exp']),
                comm_exp=self._convert_decimal(row['comm_exp']),
                biz_tax_surchg=self._convert_decimal(row['biz_tax_surchg']),
                sell_exp=self._convert_decimal(row['sell_exp']),
                admin_exp=self._convert_decimal(row['admin_exp']),
                fin_exp=self._convert_decimal(row['fin_exp']),
                assets_impair_loss=self._convert_decimal(row['assets_impair_loss']),
                prem_refund=self._convert_decimal(row['prem_refund']),
                compens_payout=self._convert_decimal(row['compens_payout']),
                reser_insur_liab=self._convert_decimal(row['reser_insur_liab']),
                div_payt=self._convert_decimal(row['div_payt']),
                reins_exp=self._convert_decimal(row['reins_exp']),
                oper_exp=self._convert_decimal(row['oper_exp']),
                compens_payout_refu=self._convert_decimal(row['compens_payout_refu']),
                insur_reser_refu=self._convert_decimal(row['insur_reser_refu']),
                reins_cost_refund=self._convert_decimal(row['reins_cost_refund']),
                other_bus_cost=self._convert_decimal(row['other_bus_cost']),
                operate_profit=self._convert_decimal(row['operate_profit']),
                non_oper_income=self._convert_decimal(row['non_oper_income']),
                non_oper_exp=self._convert_decimal(row['non_oper_exp']),
                nca_disploss=self._convert_decimal(row['nca_disploss']),
                total_profit=self._convert_decimal(row['total_profit']),
                income_tax=self._convert_decimal(row['income_tax']),
                n_income=self._convert_decimal(row['n_income']),
                n_income_attr_p=self._convert_decimal(row['n_income_attr_p']),
                minority_gain=self._convert_decimal(row['minority_gain']),
                oth_compr_income=self._convert_decimal(row['oth_compr_income']),
                t_compr_income=self._convert_decimal(row['t_compr_income']),
                compr_inc_attr_p=self._convert_decimal(row['compr_inc_attr_p']),
                compr_inc_attr_m_s=self._convert_decimal(row['compr_inc_attr_m_s']),
                ebit=self._convert_decimal(row['ebit']),
                ebitda=self._convert_decimal(row['ebitda']),
                insurance_exp=self._convert_decimal(row['insurance_exp']),
                undist_profit=self._convert_decimal(row['undist_profit']),
                distable_profit=self._convert_decimal(row['distable_profit']),
                rd_exp=self._convert_decimal(row['rd_exp']),
                fin_exp_int_exp=self._convert_decimal(row['fin_exp_int_exp']),
                fin_exp_int_inc=self._convert_decimal(row['fin_exp_int_inc']),
                transfer_surplus_rese=self._convert_decimal(row['transfer_surplus_rese']),
                transfer_housing_imprest=self._convert_decimal(row['transfer_housing_imprest']),
                transfer_oth=self._convert_decimal(row['transfer_oth']),
                adj_lossgain=self._convert_decimal(row['adj_lossgain']),
                withdra_legal_surplus=self._convert_decimal(row['withdra_legal_surplus']),
                withdra_legal_pubfund=self._convert_decimal(row['withdra_legal_pubfund']),
                withdra_biz_devfund=self._convert_decimal(row['withdra_biz_devfund']),
                withdra_rese_fund=self._convert_decimal(row['withdra_rese_fund']),
                withdra_oth_ersu=self._convert_decimal(row['withdra_oth_ersu']),
                workers_welfare=self._convert_decimal(row['workers_welfare']),
                distr_profit_shrhder=self._convert_decimal(row['distr_profit_shrhder']),
                prfshare_payable_dvd=self._convert_decimal(row['prfshare_payable_dvd']),
                comshare_payable_dvd=self._convert_decimal(row['comshare_payable_dvd']),
                capit_comstock_div=self._convert_decimal(row['capit_comstock_div']),
                net_after_nr_lp_correct=self._convert_decimal(row['net_after_nr_lp_correct']),
                credit_impa_loss=self._convert_decimal(row['credit_impa_loss']),
                net_expo_hedging_benefits=self._convert_decimal(row['net_expo_hedging_benefits']),
                oth_impair_loss_assets=self._convert_decimal(row['oth_impair_loss_assets']),
                total_opcost=self._convert_decimal(row['total_opcost']),
                amodcost_fin_assets=self._convert_decimal(row['amodcost_fin_assets']),
                oth_income=self._convert_decimal(row['oth_income']),
                asset_disp_income=self._convert_decimal(row['asset_disp_income']),
                continued_net_profit=self._convert_decimal(row['continued_net_profit']),
                end_net_profit=self._convert_decimal(row['end_net_profit']),
                update_flag=row['update_flag']
            )
            statements.append(statement)
            
        return statements
        
    def fetch_balance_sheet(self, ts_code: str, start_date: date, end_date: date) -> List[BalanceSheet]:
        """同步资产负债表数据"""
        df = self.pro.balancesheet(
            ts_code=ts_code,
            start_date=self._convert_date_to_str(start_date),
            end_date=self._convert_date_to_str(end_date),
            fields='ts_code,'
                'ann_date,'
                'f_ann_date,'
                'end_date,'
                'report_type,'
                'comp_type,'
                'end_type,'
                'total_share,'
                'cap_rese,'
                'undistr_porfit,'
                'surplus_rese,'
                'special_rese,'
                'money_cap,'
                'trad_asset,'
                'notes_receiv,'
                'accounts_receiv,'
                'oth_receiv,'
                'prepayment,'
                'div_receiv,'
                'int_receiv,'
                'inventories,'
                'amor_exp,'
                'nca_within_1y,'
                'sett_rsrv,'
                'loanto_oth_bank_fi,'
                'premium_receiv,'
                'reinsur_receiv,'
                'reinsur_res_receiv,'
                'pur_resale_fa,'
                'oth_cur_assets,'
                'total_cur_assets,'
                'fa_avail_for_sale,'
                'htm_invest,'
                'lt_eqt_invest,'
                'invest_real_estate,'
                'time_deposits,'
                'oth_assets,'
                'lt_rec,'
                'fix_assets,'
                'cip,'
                'const_materials,'
                'fixed_assets_disp,'
                'produc_bio_assets,'
                'oil_and_gas_assets,'
                'intan_assets,'
                'r_and_d,'
                'goodwill,'
                'lt_amor_exp,'
                'defer_tax_assets,'
                'decr_in_disbur,'
                'oth_nca,'
                'total_nca,'
                'cash_reser_cb,'
                'depos_in_oth_bfi,'
                'prec_metals,'
                'deriv_assets,'
                'rr_reins_une_prem,'
                'rr_reins_outstd_cla,'
                'rr_reins_lins_liab,'
                'rr_reins_lthins_liab,'
                'refund_depos,'
                'ph_pledge_loans,'
                'refund_cap_depos,'
                'indep_acct_assets,'
                'client_depos,'
                'client_prov,'
                'transac_seat_fee,'
                'invest_as_receiv,'
                'total_assets,'
                'lt_borr,'
                'st_borr,'
                'cb_borr,'
                'depos_ib_deposits,'
                'loan_oth_bank,'
                'trading_fl,'
                'notes_payable,'
                'acct_payable,'
                'adv_receipts,'
                'sold_for_repur_fa,'
                'comm_payable,'
                'payroll_payable,'
                'taxes_payable,'
                'int_payable,'
                'div_payable,'
                'oth_payable,'
                'acc_exp,'
                'deferred_inc,'
                'st_bonds_payable,'
                'payable_to_reinsurer,'
                'rsrv_insur_cont,'
                'acting_trading_sec,'
                'acting_uw_sec,'
                'non_cur_liab_due_1y,'
                'oth_cur_liab,'
                'total_cur_liab,'
                'bond_payable,'
                'lt_payable,'
                'specific_payables,'
                'estimated_liab,'
                'defer_tax_liab,'
                'defer_inc_non_cur_liab,'
                'oth_ncl,'
                'total_ncl,'
                'depos_oth_bfi,'
                'deriv_liab,'
                'depos,'
                'agency_bus_liab,'
                'oth_liab,'
                'prem_receiv_adva,'
                'depos_received,'
                'ph_invest,'
                'reser_une_prem,'
                'reser_outstd_claims,'
                'reser_lins_liab,'
                'reser_lthins_liab,'
                'indept_acc_liab,'
                'pledge_borr,'
                'indem_payable,'
                'policy_div_payable,'
                'total_liab,'
                'treasury_share,'
                'ordin_risk_reser,'
                'forex_differ,'
                'invest_loss_unconf,'
                'minority_int,'
                'total_hldr_eqy_exc_min_int,'
                'total_hldr_eqy_inc_min_int,'
                'total_liab_hldr_eqy,'
                'lt_payroll_payable,'
                'oth_comp_income,'
                'oth_eqt_tools,'
                'oth_eqt_tools_p_shr,'
                'lending_funds,'
                'acc_receivable,'
                'st_fin_payable,'
                'payables,'
                'hfs_assets,'
                'hfs_sales,'
                'cost_fin_assets,'
                'fair_value_fin_assets,'
                'cip_total,'
                'oth_pay_total,'
                'long_pay_total,'
                'debt_invest,'
                'oth_debt_invest,'
                'oth_eq_invest,'
                'oth_illiq_fin_assets,'
                'oth_eq_ppbond,'
                'receiv_financing,'
                'use_right_assets,'
                'lease_liab,'
                'contract_assets,'
                'contract_liab,'
                'accounts_receiv_bill,'
                'accounts_pay,'
                'oth_rcv_total,'
                'fix_assets_total,'
                'update_flag'
        )
        
        sheets = []
        for _, row in df.iterrows():
            sheet = BalanceSheet(
                ts_code=row['ts_code'],
                ann_date=self._convert_date(row['ann_date']),
                f_ann_date=self._convert_date(row['f_ann_date']),
                end_date=self._convert_date(row['end_date']),
                report_type=row['report_type'],
                comp_type=row['comp_type'],
                end_type=row['end_type'],
                total_share=self._convert_decimal(row['total_share']),
                cap_rese=self._convert_decimal(row['cap_rese']),
                undistr_porfit=self._convert_decimal(row['undistr_porfit']),
                surplus_rese=self._convert_decimal(row['surplus_rese']),
                special_rese=self._convert_decimal(row['special_rese']),
                money_cap=self._convert_decimal(row['money_cap']),
                trad_asset=self._convert_decimal(row['trad_asset']),
                notes_receiv=self._convert_decimal(row['notes_receiv']),
                accounts_receiv=self._convert_decimal(row['accounts_receiv']),
                oth_receiv=self._convert_decimal(row['oth_receiv']),
                prepayment=self._convert_decimal(row['prepayment']),
                div_receiv=self._convert_decimal(row['div_receiv']),
                int_receiv=self._convert_decimal(row['int_receiv']),
                inventories=self._convert_decimal(row['inventories']),
                amor_exp=self._convert_decimal(row['amor_exp']),
                nca_within_1y=self._convert_decimal(row['nca_within_1y']),
                sett_rsrv=self._convert_decimal(row['sett_rsrv']),
                loanto_oth_bank_fi=self._convert_decimal(row['loanto_oth_bank_fi']),
                premium_receiv=self._convert_decimal(row['premium_receiv']),
                reinsur_receiv=self._convert_decimal(row['reinsur_receiv']),
                reinsur_res_receiv=self._convert_decimal(row['reinsur_res_receiv']),
                pur_resale_fa=self._convert_decimal(row['pur_resale_fa']),
                oth_cur_assets=self._convert_decimal(row['oth_cur_assets']),
                total_cur_assets=self._convert_decimal(row['total_cur_assets']),
                fa_avail_for_sale=self._convert_decimal(row['fa_avail_for_sale']),
                htm_invest=self._convert_decimal(row['htm_invest']),
                lt_eqt_invest=self._convert_decimal(row['lt_eqt_invest']),
                invest_real_estate=self._convert_decimal(row['invest_real_estate']),
                time_deposits=self._convert_decimal(row['time_deposits']),
                oth_assets=self._convert_decimal(row['oth_assets']),
                lt_rec=self._convert_decimal(row['lt_rec']),
                fix_assets=self._convert_decimal(row['fix_assets']),
                cip=self._convert_decimal(row['cip']),
                const_materials=self._convert_decimal(row['const_materials']),
                fixed_assets_disp=self._convert_decimal(row['fixed_assets_disp']),
                produc_bio_assets=self._convert_decimal(row['produc_bio_assets']),
                oil_and_gas_assets=self._convert_decimal(row['oil_and_gas_assets']),
                intan_assets=self._convert_decimal(row['intan_assets']),
                r_and_d=self._convert_decimal(row['r_and_d']),
                goodwill=self._convert_decimal(row['goodwill']),
                lt_amor_exp=self._convert_decimal(row['lt_amor_exp']),
                defer_tax_assets=self._convert_decimal(row['defer_tax_assets']),
                decr_in_disbur=self._convert_decimal(row['decr_in_disbur']),
                oth_nca=self._convert_decimal(row['oth_nca']),
                total_nca=self._convert_decimal(row['total_nca']),
                cash_reser_cb=self._convert_decimal(row['cash_reser_cb']),
                depos_in_oth_bfi=self._convert_decimal(row['depos_in_oth_bfi']),
                prec_metals=self._convert_decimal(row['prec_metals']),
                deriv_assets=self._convert_decimal(row['deriv_assets']),
                rr_reins_une_prem=self._convert_decimal(row['rr_reins_une_prem']),
                rr_reins_outstd_cla=self._convert_decimal(row['rr_reins_outstd_cla']),
                rr_reins_lins_liab=self._convert_decimal(row['rr_reins_lins_liab']),
                rr_reins_lthins_liab=self._convert_decimal(row['rr_reins_lthins_liab']),
                refund_depos=self._convert_decimal(row['refund_depos']),
                ph_pledge_loans=self._convert_decimal(row['ph_pledge_loans']),
                refund_cap_depos=self._convert_decimal(row['refund_cap_depos']),
                indep_acct_assets=self._convert_decimal(row['indep_acct_assets']),
                client_depos=self._convert_decimal(row['client_depos']),
                client_prov=self._convert_decimal(row['client_prov']),
                transac_seat_fee=self._convert_decimal(row['transac_seat_fee']),
                invest_as_receiv=self._convert_decimal(row['invest_as_receiv']),
                total_assets=self._convert_decimal(row['total_assets']),
                lt_borr=self._convert_decimal(row['lt_borr']),
                st_borr=self._convert_decimal(row['st_borr']),
                cb_borr=self._convert_decimal(row['cb_borr']),
                depos_ib_deposits=self._convert_decimal(row['depos_ib_deposits']),
                loan_oth_bank=self._convert_decimal(row['loan_oth_bank']),
                trading_fl=self._convert_decimal(row['trading_fl']),
                notes_payable=self._convert_decimal(row['notes_payable']),
                acct_payable=self._convert_decimal(row['acct_payable']),
                adv_receipts=self._convert_decimal(row['adv_receipts']),
                sold_for_repur_fa=self._convert_decimal(row['sold_for_repur_fa']),
                comm_payable=self._convert_decimal(row['comm_payable']),
                payroll_payable=self._convert_decimal(row['payroll_payable']),
                taxes_payable=self._convert_decimal(row['taxes_payable']),
                int_payable=self._convert_decimal(row['int_payable']),
                div_payable=self._convert_decimal(row['div_payable']),
                oth_payable=self._convert_decimal(row['oth_payable']),
                acc_exp=self._convert_decimal(row['acc_exp']),
                deferred_inc=self._convert_decimal(row['deferred_inc']),
                st_bonds_payable=self._convert_decimal(row['st_bonds_payable']),
                payable_to_reinsurer=self._convert_decimal(row['payable_to_reinsurer']),
                rsrv_insur_cont=self._convert_decimal(row['rsrv_insur_cont']),
                acting_trading_sec=self._convert_decimal(row['acting_trading_sec']),
                acting_uw_sec=self._convert_decimal(row['acting_uw_sec']),
                non_cur_liab_due_1y=self._convert_decimal(row['non_cur_liab_due_1y']),
                oth_cur_liab=self._convert_decimal(row['oth_cur_liab']),
                total_cur_liab=self._convert_decimal(row['total_cur_liab']),
                bond_payable=self._convert_decimal(row['bond_payable']),
                lt_payable=self._convert_decimal(row['lt_payable']),
                specific_payables=self._convert_decimal(row['specific_payables']),
                estimated_liab=self._convert_decimal(row['estimated_liab']),
                defer_tax_liab=self._convert_decimal(row['defer_tax_liab']),
                defer_inc_non_cur_liab=self._convert_decimal(row['defer_inc_non_cur_liab']),
                oth_ncl=self._convert_decimal(row['oth_ncl']),
                total_ncl=self._convert_decimal(row['total_ncl']),
                depos_oth_bfi=self._convert_decimal(row['depos_oth_bfi']),
                deriv_liab=self._convert_decimal(row['deriv_liab']),
                depos=self._convert_decimal(row['depos']),
                agency_bus_liab=self._convert_decimal(row['agency_bus_liab']),
                oth_liab=self._convert_decimal(row['oth_liab']),
                prem_receiv_adva=self._convert_decimal(row['prem_receiv_adva']),
                depos_received=self._convert_decimal(row['depos_received']),
                ph_invest=self._convert_decimal(row['ph_invest']),
                reser_une_prem=self._convert_decimal(row['reser_une_prem']),
                reser_outstd_claims=self._convert_decimal(row['reser_outstd_claims']),
                reser_lins_liab=self._convert_decimal(row['reser_lins_liab']),
                reser_lthins_liab=self._convert_decimal(row['reser_lthins_liab']),
                indept_acc_liab=self._convert_decimal(row['indept_acc_liab']),
                pledge_borr=self._convert_decimal(row['pledge_borr']),
                indem_payable=self._convert_decimal(row['indem_payable']),
                policy_div_payable=self._convert_decimal(row['policy_div_payable']),
                total_liab=self._convert_decimal(row['total_liab']),
                treasury_share=self._convert_decimal(row['treasury_share']),
                ordin_risk_reser=self._convert_decimal(row['ordin_risk_reser']),
                forex_differ=self._convert_decimal(row['forex_differ']),
                invest_loss_unconf=self._convert_decimal(row['invest_loss_unconf']),
                minority_int=self._convert_decimal(row['minority_int']),
                total_hldr_eqy_exc_min_int=self._convert_decimal(row['total_hldr_eqy_exc_min_int']),
                total_hldr_eqy_inc_min_int=self._convert_decimal(row['total_hldr_eqy_inc_min_int']),
                total_liab_hldr_eqy=self._convert_decimal(row['total_liab_hldr_eqy']),
                lt_payroll_payable=self._convert_decimal(row['lt_payroll_payable']),
                oth_comp_income=self._convert_decimal(row['oth_comp_income']),
                oth_eqt_tools=self._convert_decimal(row['oth_eqt_tools']),
                oth_eqt_tools_p_shr=self._convert_decimal(row['oth_eqt_tools_p_shr']),
                lending_funds=self._convert_decimal(row['lending_funds']),
                acc_receivable=self._convert_decimal(row['acc_receivable']),
                st_fin_payable=self._convert_decimal(row['st_fin_payable']),
                payables=self._convert_decimal(row['payables']),
                hfs_assets=self._convert_decimal(row['hfs_assets']),
                hfs_sales=self._convert_decimal(row['hfs_sales']),
                cost_fin_assets=self._convert_decimal(row['cost_fin_assets']),
                fair_value_fin_assets=self._convert_decimal(row['fair_value_fin_assets']),
                cip_total=self._convert_decimal(row['cip_total']),
                oth_pay_total=self._convert_decimal(row['oth_pay_total']),
                long_pay_total=self._convert_decimal(row['long_pay_total']),
                debt_invest=self._convert_decimal(row['debt_invest']),
                oth_debt_invest=self._convert_decimal(row['oth_debt_invest']),
                oth_eq_invest=self._convert_decimal(row['oth_eq_invest']),
                oth_illiq_fin_assets=self._convert_decimal(row['oth_illiq_fin_assets']),
                oth_eq_ppbond=self._convert_decimal(row['oth_eq_ppbond']),
                receiv_financing=self._convert_decimal(row['receiv_financing']),
                use_right_assets=self._convert_decimal(row['use_right_assets']),
                lease_liab=self._convert_decimal(row['lease_liab']),
                contract_assets=self._convert_decimal(row['contract_assets']),
                contract_liab=self._convert_decimal(row['contract_liab']),
                accounts_receiv_bill=self._convert_decimal(row['accounts_receiv_bill']),
                accounts_pay=self._convert_decimal(row['accounts_pay']),
                oth_rcv_total=self._convert_decimal(row['oth_rcv_total']),
                fix_assets_total=self._convert_decimal(row['fix_assets_total']),
                update_flag=row['update_flag'],
            )
            sheets.append(sheet)
            
        return sheets
        
    def fetch_cash_flow(self, ts_code: str, start_date: date, end_date: date) -> List[CashFlowStatement]:
        """同步现金流量表数据"""
        df = self.pro.cashflow(
            ts_code=ts_code,
            start_date=self._convert_date_to_str(start_date),
            end_date=self._convert_date_to_str(end_date),
            fields='ts_code,'
                'ann_date,'
                'f_ann_date,'
                'end_date,'
                'comp_type,'
                'report_type,'
                'end_type,'
                'net_profit,'
                'finan_exp,'
                'c_fr_sale_sg,'
                'recp_tax_rends,'
                'n_depos_incr_fi,'
                'n_incr_loans_cb,'
                'n_inc_borr_oth_fi,'
                'prem_fr_orig_contr,'
                'n_incr_insured_dep,'
                'n_reinsur_prem,'
                'n_incr_disp_tfa,'
                'ifc_cash_incr,'
                'n_incr_disp_faas,'
                'n_incr_loans_oth_bank,'
                'n_cap_incr_repur,'
                'c_fr_oth_operate_a,'
                'c_inf_fr_operate_a,'
                'c_paid_goods_s,'
                'c_paid_to_for_empl,'
                'c_paid_for_taxes,'
                'n_incr_clt_loan_adv,'
                'n_incr_dep_cbob,'
                'c_pay_claims_orig_inco,'
                'pay_handling_chrg,'
                'pay_comm_insur_plcy,'
                'oth_cash_pay_oper_act,'
                'st_cash_out_act,'
                'n_cashflow_act,'
                'oth_recp_ral_inv_act,'
                'c_disp_withdrwl_invest,'
                'c_recp_return_invest,'
                'n_recp_disp_fiolta,'
                'n_recp_disp_sobu,'
                'stot_inflows_inv_act,'
                'c_pay_acq_const_fiolta,'
                'c_paid_invest,'
                'n_disp_subs_oth_biz,'
                'oth_pay_ral_inv_act,'
                'n_incr_pledge_loan,'
                'stot_out_inv_act,'
                'n_cashflow_inv_act,'
                'c_recp_borrow,'
                'proc_issue_bonds,'
                'oth_cash_recp_ral_fnc_act,'
                'stot_cash_in_fnc_act,'
                'free_cashflow,'
                'c_prepay_amt_borr,'
                'c_pay_dist_dpcp_int_exp,'
                'incl_dvd_profit_paid_sc_ms,'
                'oth_cashpay_ral_fnc_act,'
                'stot_cashout_fnc_act,'
                'n_cash_flows_fnc_act,'
                'eff_fx_flu_cash,'
                'n_incr_cash_cash_equ,'
                'c_cash_equ_beg_period,'
                'c_cash_equ_end_period,'
                'c_recp_cap_contrib,'
                'incl_cash_rec_saims,'
                'uncon_invest_loss,'
                'prov_depr_assets,'
                'depr_fa_coga_dpba,'
                'amort_intang_assets,'
                'lt_amort_deferred_exp,'
                'decr_deferred_exp,'
                'incr_acc_exp,'
                'loss_disp_fiolta,'
                'loss_scr_fa,'
                'loss_fv_chg,'
                'invest_loss,'
                'decr_def_inc_tax_assets,'
                'incr_def_inc_tax_liab,'
                'decr_inventories,'
                'decr_oper_payable,'
                'incr_oper_payable,'
                'others,'
                'im_net_cashflow_oper_act,'
                'conv_debt_into_cap,'
                'conv_copbonds_due_within_1y,'
                'fa_fnc_leases,'
                'im_n_incr_cash_equ,'
                'net_dism_capital_add,'
                'net_cash_rece_sec,'
                'credit_impa_loss,'
                'use_right_asset_dep,'
                'oth_loss_asset,'
                'end_bal_cash,'
                'beg_bal_cash,'
                'end_bal_cash_equ,'
                'beg_bal_cash_equ,'
                'update_flag'
        )
        
        statements = []
        for _, row in df.iterrows():
            statement = CashFlowStatement(
                ts_code=row['ts_code'],
                ann_date=self._convert_date(row['ann_date']),
                f_ann_date=self._convert_date(row['f_ann_date']),
                end_date=self._convert_date(row['end_date']),
                comp_type=row['comp_type'],
                report_type=row['report_type'],
                end_type=row['end_type'],
                net_profit=self._convert_decimal(row['net_profit']),
                finan_exp=self._convert_decimal(row['finan_exp']),
                c_fr_sale_sg=self._convert_decimal(row['c_fr_sale_sg']),
                recp_tax_rends=self._convert_decimal(row['recp_tax_rends']),
                n_depos_incr_fi=self._convert_decimal(row['n_depos_incr_fi']),
                n_incr_loans_cb=self._convert_decimal(row['n_incr_loans_cb']),
                n_inc_borr_oth_fi=self._convert_decimal(row['n_inc_borr_oth_fi']),
                prem_fr_orig_contr=self._convert_decimal(row['prem_fr_orig_contr']),
                n_incr_insured_dep=self._convert_decimal(row['n_incr_insured_dep']),
                n_reinsur_prem=self._convert_decimal(row['n_reinsur_prem']),
                n_incr_disp_tfa=self._convert_decimal(row['n_incr_disp_tfa']),
                ifc_cash_incr=self._convert_decimal(row['ifc_cash_incr']),
                n_incr_disp_faas=self._convert_decimal(row['n_incr_disp_faas']),
                n_incr_loans_oth_bank=self._convert_decimal(row['n_incr_loans_oth_bank']),
                n_cap_incr_repur=self._convert_decimal(row['n_cap_incr_repur']),
                c_fr_oth_operate_a=self._convert_decimal(row['c_fr_oth_operate_a']),
                c_inf_fr_operate_a=self._convert_decimal(row['c_inf_fr_operate_a']),
                c_paid_goods_s=self._convert_decimal(row['c_paid_goods_s']),
                c_paid_to_for_empl=self._convert_decimal(row['c_paid_to_for_empl']),
                c_paid_for_taxes=self._convert_decimal(row['c_paid_for_taxes']),
                n_incr_clt_loan_adv=self._convert_decimal(row['n_incr_clt_loan_adv']),
                n_incr_dep_cbob=self._convert_decimal(row['n_incr_dep_cbob']),
                c_pay_claims_orig_inco=self._convert_decimal(row['c_pay_claims_orig_inco']),
                pay_handling_chrg=self._convert_decimal(row['pay_handling_chrg']),
                pay_comm_insur_plcy=self._convert_decimal(row['pay_comm_insur_plcy']),
                oth_cash_pay_oper_act=self._convert_decimal(row['oth_cash_pay_oper_act']),
                st_cash_out_act=self._convert_decimal(row['st_cash_out_act']),
                n_cashflow_act=self._convert_decimal(row['n_cashflow_act']),
                oth_recp_ral_inv_act=self._convert_decimal(row['oth_recp_ral_inv_act']),
                c_disp_withdrwl_invest=self._convert_decimal(row['c_disp_withdrwl_invest']),
                c_recp_return_invest=self._convert_decimal(row['c_recp_return_invest']),
                n_recp_disp_fiolta=self._convert_decimal(row['n_recp_disp_fiolta']),
                n_recp_disp_sobu=self._convert_decimal(row['n_recp_disp_sobu']),
                stot_inflows_inv_act=self._convert_decimal(row['stot_inflows_inv_act']),
                c_pay_acq_const_fiolta=self._convert_decimal(row['c_pay_acq_const_fiolta']),
                c_paid_invest=self._convert_decimal(row['c_paid_invest']),
                n_disp_subs_oth_biz=self._convert_decimal(row['n_disp_subs_oth_biz']),
                oth_pay_ral_inv_act=self._convert_decimal(row['oth_pay_ral_inv_act']),
                n_incr_pledge_loan=self._convert_decimal(row['n_incr_pledge_loan']),
                stot_out_inv_act=self._convert_decimal(row['stot_out_inv_act']),
                n_cashflow_inv_act=self._convert_decimal(row['n_cashflow_inv_act']),
                c_recp_borrow=self._convert_decimal(row['c_recp_borrow']),
                proc_issue_bonds=self._convert_decimal(row['proc_issue_bonds']),
                oth_cash_recp_ral_fnc_act=self._convert_decimal(row['oth_cash_recp_ral_fnc_act']),
                stot_cash_in_fnc_act=self._convert_decimal(row['stot_cash_in_fnc_act']),
                free_cashflow=self._convert_decimal(row['free_cashflow']),
                c_prepay_amt_borr=self._convert_decimal(row['c_prepay_amt_borr']),
                c_pay_dist_dpcp_int_exp=self._convert_decimal(row['c_pay_dist_dpcp_int_exp']),
                incl_dvd_profit_paid_sc_ms=self._convert_decimal(row['incl_dvd_profit_paid_sc_ms']),
                oth_cashpay_ral_fnc_act=self._convert_decimal(row['oth_cashpay_ral_fnc_act']),
                stot_cashout_fnc_act=self._convert_decimal(row['stot_cashout_fnc_act']),
                n_cash_flows_fnc_act=self._convert_decimal(row['n_cash_flows_fnc_act']),
                eff_fx_flu_cash=self._convert_decimal(row['eff_fx_flu_cash']),
                n_incr_cash_cash_equ=self._convert_decimal(row['n_incr_cash_cash_equ']),
                c_cash_equ_beg_period=self._convert_decimal(row['c_cash_equ_beg_period']),
                c_cash_equ_end_period=self._convert_decimal(row['c_cash_equ_end_period']),
                c_recp_cap_contrib=self._convert_decimal(row['c_recp_cap_contrib']),
                incl_cash_rec_saims=self._convert_decimal(row['incl_cash_rec_saims']),
                uncon_invest_loss=self._convert_decimal(row['uncon_invest_loss']),
                prov_depr_assets=self._convert_decimal(row['prov_depr_assets']),
                depr_fa_coga_dpba=self._convert_decimal(row['depr_fa_coga_dpba']),
                amort_intang_assets=self._convert_decimal(row['amort_intang_assets']),
                lt_amort_deferred_exp=self._convert_decimal(row['lt_amort_deferred_exp']),
                decr_deferred_exp=self._convert_decimal(row['decr_deferred_exp']),
                incr_acc_exp=self._convert_decimal(row['incr_acc_exp']),
                loss_disp_fiolta=self._convert_decimal(row['loss_disp_fiolta']),
                loss_scr_fa=self._convert_decimal(row['loss_scr_fa']),
                loss_fv_chg=self._convert_decimal(row['loss_fv_chg']),
                invest_loss=self._convert_decimal(row['invest_loss']),
                decr_def_inc_tax_assets=self._convert_decimal(row['decr_def_inc_tax_assets']),
                incr_def_inc_tax_liab=self._convert_decimal(row['incr_def_inc_tax_liab']),
                decr_inventories=self._convert_decimal(row['decr_inventories']),
                decr_oper_payable=self._convert_decimal(row['decr_oper_payable']),
                incr_oper_payable=self._convert_decimal(row['incr_oper_payable']),
                others=self._convert_decimal(row['others']),
                im_net_cashflow_oper_act=self._convert_decimal(row['im_net_cashflow_oper_act']),
                conv_debt_into_cap=self._convert_decimal(row['conv_debt_into_cap']),
                conv_copbonds_due_within_1y=self._convert_decimal(row['conv_copbonds_due_within_1y']),
                fa_fnc_leases=self._convert_decimal(row['fa_fnc_leases']),
                im_n_incr_cash_equ=self._convert_decimal(row['im_n_incr_cash_equ']),
                net_dism_capital_add=self._convert_decimal(row['net_dism_capital_add']),
                net_cash_rece_sec=self._convert_decimal(row['net_cash_rece_sec']),
                credit_impa_loss=self._convert_decimal(row['credit_impa_loss']),
                use_right_asset_dep=self._convert_decimal(row['use_right_asset_dep']),
                oth_loss_asset=self._convert_decimal(row['oth_loss_asset']),
                end_bal_cash=self._convert_decimal(row['end_bal_cash']),
                beg_bal_cash=self._convert_decimal(row['beg_bal_cash']),
                end_bal_cash_equ=self._convert_decimal(row['end_bal_cash_equ']),
                beg_bal_cash_equ=self._convert_decimal(row['beg_bal_cash_equ']),
                update_flag=self._convert_decimal(row['update_flag']),
            )
            statements.append(statement)
            
        return statements
        
    def fetch_financial_indicators(self, ts_code: str, start_date: date, end_date: date) -> List[FinancialIndicators]:
        """同步财务指标数据"""
        df = self.pro.fina_indicator(
            ts_code=ts_code,
            start_date=self._convert_date_to_str(start_date),
            end_date=self._convert_date_to_str(end_date),
            fields='ts_code,'
                'ann_date,'
                'end_date,'
                'eps,'
                'dt_eps,'
                'total_revenue_ps,'
                'revenue_ps,'
                'capital_rese_ps,'
                'surplus_rese_ps,'
                'undist_profit_ps,'
                'extra_item,'
                'profit_dedt,'
                'gross_margin,'
                'current_ratio,'
                'quick_ratio,'
                'cash_ratio,'
                'invturn_days,'
                'arturn_days,'
                'inv_turn,'
                'ar_turn,'
                'ca_turn,'
                'fa_turn,'
                'assets_turn,'
                'op_income,'
                'valuechange_income,'
                'interst_income,'
                'daa,'
                'ebit,'
                'ebitda,'
                'fcff,'
                'fcfe,'
                'current_exint,'
                'noncurrent_exint,'
                'interestdebt,'
                'netdebt,'
                'tangible_asset,'
                'working_capital,'
                'networking_capital,'
                'invest_capital,'
                'retained_earnings,'
                'diluted2_eps,'
                'bps,'
                'ocfps,'
                'retainedps,'
                'cfps,'
                'ebit_ps,'
                'fcff_ps,'
                'fcfe_ps,'
                'netprofit_margin,'
                'grossprofit_margin,'
                'cogs_of_sales,'
                'expense_of_sales,'
                'profit_to_gr,'
                'saleexp_to_gr,'
                'adminexp_of_gr,'
                'finaexp_of_gr,'
                'impai_ttm,'
                'gc_of_gr,'
                'op_of_gr,'
                'ebit_of_gr,'
                'roe,'
                'roe_waa,'
                'roe_dt,'
                'roa,'
                'npta,'
                'roic,'
                'roe_yearly,'
                'roa2_yearly,'
                'roe_avg,'
                'opincome_of_ebt,'
                'investincome_of_ebt,'
                'n_op_profit_of_ebt,'
                'tax_to_ebt,'
                'dtprofit_to_profit,'
                'salescash_to_or,'
                'ocf_to_or,'
                'ocf_to_opincome,'
                'capitalized_to_da,'
                'debt_to_assets,'
                'assets_to_eqt,'
                'dp_assets_to_eqt,'
                'ca_to_assets,'
                'nca_to_assets,'
                'tbassets_to_totalassets,'
                'int_to_talcap,'
                'eqt_to_talcapital,'
                'currentdebt_to_debt,'
                'longdeb_to_debt,'
                'ocf_to_shortdebt,'
                'debt_to_eqt,'
                'eqt_to_debt,'
                'eqt_to_interestdebt,'
                'tangibleasset_to_debt,'
                'tangasset_to_intdebt,'
                'tangibleasset_to_netdebt,'
                'ocf_to_debt,'
                'ocf_to_interestdebt,'
                'ocf_to_netdebt,'
                'ebit_to_interest,'
                'longdebt_to_workingcapital,'
                'ebitda_to_debt,'
                'turn_days,'
                'roa_yearly,'
                'roa_dp,'
                'fixed_assets,'
                'profit_prefin_exp,'
                'non_op_profit,'
                'op_to_ebt,'
                'nop_to_ebt,'
                'ocf_to_profit,'
                'cash_to_liqdebt,'
                'cash_to_liqdebt_withinterest,'
                'op_to_liqdebt,'
                'op_to_debt,'
                'roic_yearly,'
                'total_fa_trun,'
                'profit_to_op,'
                'q_opincome,'
                'q_investincome,'
                'q_dtprofit,'
                'q_eps,'
                'q_netprofit_margin,'
                'q_gsprofit_margin,'
                'q_exp_to_sales,'
                'q_profit_to_gr,'
                'q_saleexp_to_gr,'
                'q_adminexp_to_gr,'
                'q_finaexp_to_gr,'
                'q_impair_to_gr_ttm,'
                'q_gc_to_gr,'
                'q_op_to_gr,'
                'q_roe,'
                'q_dt_roe,'
                'q_npta,'
                'q_opincome_to_ebt,'
                'q_investincome_to_ebt,'
                'q_dtprofit_to_profit,'
                'q_salescash_to_or,'
                'q_ocf_to_sales,'
                'q_ocf_to_or,'
                'basic_eps_yoy,'
                'dt_eps_yoy,'
                'cfps_yoy,'
                'op_yoy,'
                'ebt_yoy,'
                'netprofit_yoy,'
                'dt_netprofit_yoy,'
                'ocf_yoy,'
                'roe_yoy,'
                'bps_yoy,'
                'assets_yoy,'
                'eqt_yoy,'
                'tr_yoy,'
                'or_yoy,'
                'q_gr_yoy,'
                'q_gr_qoq,'
                'q_sales_yoy,'
                'q_sales_qoq,'
                'q_op_yoy,'
                'q_op_qoq,'
                'q_profit_yoy,'
                'q_profit_qoq,'
                'q_netprofit_yoy,'
                'q_netprofit_qoq,'
                'equity_yoy,'
                'rd_exp,'
                'update_flag'
        )
        
        indicators = []
        for _, row in df.iterrows():
            indicator = FinancialIndicators(
                ts_code=row['ts_code'],
                ann_date=self._convert_date(row['ann_date']),
                end_date=self._convert_date(row['end_date']),
                eps=self._convert_decimal(row['eps']),
                dt_eps=self._convert_decimal(row['dt_eps']),
                total_revenue_ps=self._convert_decimal(row['total_revenue_ps']),
                revenue_ps=self._convert_decimal(row['revenue_ps']),
                capital_rese_ps=self._convert_decimal(row['capital_rese_ps']),
                surplus_rese_ps=self._convert_decimal(row['surplus_rese_ps']),
                undist_profit_ps=self._convert_decimal(row['undist_profit_ps']),
                extra_item=self._convert_decimal(row['extra_item']),
                profit_dedt=self._convert_decimal(row['profit_dedt']),
                gross_margin=self._convert_decimal(row['gross_margin']),
                current_ratio=self._convert_decimal(row['current_ratio']),
                quick_ratio=self._convert_decimal(row['quick_ratio']),
                cash_ratio=self._convert_decimal(row['cash_ratio']),
                invturn_days=self._convert_decimal(row['invturn_days']),
                arturn_days=self._convert_decimal(row['arturn_days']),
                inv_turn=self._convert_decimal(row['inv_turn']),
                ar_turn=self._convert_decimal(row['ar_turn']),
                ca_turn=self._convert_decimal(row['ca_turn']),
                fa_turn=self._convert_decimal(row['fa_turn']),
                assets_turn=self._convert_decimal(row['assets_turn']),
                op_income=self._convert_decimal(row['op_income']),
                valuechange_income=self._convert_decimal(row['valuechange_income']),
                interst_income=self._convert_decimal(row['interst_income']),
                daa=self._convert_decimal(row['daa']),
                ebit=self._convert_decimal(row['ebit']),
                ebitda=self._convert_decimal(row['ebitda']),
                fcff=self._convert_decimal(row['fcff']),
                fcfe=self._convert_decimal(row['fcfe']),
                current_exint=self._convert_decimal(row['current_exint']),
                noncurrent_exint=self._convert_decimal(row['noncurrent_exint']),
                interestdebt=self._convert_decimal(row['interestdebt']),
                netdebt=self._convert_decimal(row['netdebt']),
                tangible_asset=self._convert_decimal(row['tangible_asset']),
                working_capital=self._convert_decimal(row['working_capital']),
                networking_capital=self._convert_decimal(row['networking_capital']),
                invest_capital=self._convert_decimal(row['invest_capital']),
                retained_earnings=self._convert_decimal(row['retained_earnings']),
                diluted2_eps=self._convert_decimal(row['diluted2_eps']),
                bps=self._convert_decimal(row['bps']),
                ocfps=self._convert_decimal(row['ocfps']),
                retainedps=self._convert_decimal(row['retainedps']),
                cfps=self._convert_decimal(row['cfps']),
                ebit_ps=self._convert_decimal(row['ebit_ps']),
                fcff_ps=self._convert_decimal(row['fcff_ps']),
                fcfe_ps=self._convert_decimal(row['fcfe_ps']),
                netprofit_margin=self._convert_decimal(row['netprofit_margin']),
                grossprofit_margin=self._convert_decimal(row['grossprofit_margin']),
                cogs_of_sales=self._convert_decimal(row['cogs_of_sales']),
                expense_of_sales=self._convert_decimal(row['expense_of_sales']),
                profit_to_gr=self._convert_decimal(row['profit_to_gr']),
                saleexp_to_gr=self._convert_decimal(row['saleexp_to_gr']),
                adminexp_of_gr=self._convert_decimal(row['adminexp_of_gr']),
                finaexp_of_gr=self._convert_decimal(row['finaexp_of_gr']),
                impai_ttm=self._convert_decimal(row['impai_ttm']),
                gc_of_gr=self._convert_decimal(row['gc_of_gr']),
                op_of_gr=self._convert_decimal(row['op_of_gr']),
                ebit_of_gr=self._convert_decimal(row['ebit_of_gr']),
                roe=self._convert_decimal(row['roe']),
                roe_waa=self._convert_decimal(row['roe_waa']),
                roe_dt=self._convert_decimal(row['roe_dt']),
                roa=self._convert_decimal(row['roa']),
                npta=self._convert_decimal(row['npta']),
                roic=self._convert_decimal(row['roic']),
                roe_yearly=self._convert_decimal(row['roe_yearly']),
                roa2_yearly=self._convert_decimal(row['roa2_yearly']),
                roe_avg=self._convert_decimal(row['roe_avg']),
                opincome_of_ebt=self._convert_decimal(row['opincome_of_ebt']),
                investincome_of_ebt=self._convert_decimal(row['investincome_of_ebt']),
                n_op_profit_of_ebt=self._convert_decimal(row['n_op_profit_of_ebt']),
                tax_to_ebt=self._convert_decimal(row['tax_to_ebt']),
                dtprofit_to_profit=self._convert_decimal(row['dtprofit_to_profit']),
                salescash_to_or=self._convert_decimal(row['salescash_to_or']),
                ocf_to_or=self._convert_decimal(row['ocf_to_or']),
                ocf_to_opincome=self._convert_decimal(row['ocf_to_opincome']),
                capitalized_to_da=self._convert_decimal(row['capitalized_to_da']),
                debt_to_assets=self._convert_decimal(row['debt_to_assets']),
                assets_to_eqt=self._convert_decimal(row['assets_to_eqt']),
                dp_assets_to_eqt=self._convert_decimal(row['dp_assets_to_eqt']),
                ca_to_assets=self._convert_decimal(row['ca_to_assets']),
                nca_to_assets=self._convert_decimal(row['nca_to_assets']),
                tbassets_to_totalassets=self._convert_decimal(row['tbassets_to_totalassets']),
                int_to_talcap=self._convert_decimal(row['int_to_talcap']),
                eqt_to_talcapital=self._convert_decimal(row['eqt_to_talcapital']),
                currentdebt_to_debt=self._convert_decimal(row['currentdebt_to_debt']),
                longdeb_to_debt=self._convert_decimal(row['longdeb_to_debt']),
                ocf_to_shortdebt=self._convert_decimal(row['ocf_to_shortdebt']),
                debt_to_eqt=self._convert_decimal(row['debt_to_eqt']),
                eqt_to_debt=self._convert_decimal(row['eqt_to_debt']),
                eqt_to_interestdebt=self._convert_decimal(row['eqt_to_interestdebt']),
                tangibleasset_to_debt=self._convert_decimal(row['tangibleasset_to_debt']),
                tangasset_to_intdebt=self._convert_decimal(row['tangasset_to_intdebt']),
                tangibleasset_to_netdebt=self._convert_decimal(row['tangibleasset_to_netdebt']),
                ocf_to_debt=self._convert_decimal(row['ocf_to_debt']),
                ocf_to_interestdebt=self._convert_decimal(row['ocf_to_interestdebt']),
                ocf_to_netdebt=self._convert_decimal(row['ocf_to_netdebt']),
                ebit_to_interest=self._convert_decimal(row['ebit_to_interest']),
                longdebt_to_workingcapital=self._convert_decimal(row['longdebt_to_workingcapital']),
                ebitda_to_debt=self._convert_decimal(row['ebitda_to_debt']),
                turn_days=self._convert_decimal(row['turn_days']),
                roa_yearly=self._convert_decimal(row['roa_yearly']),
                roa_dp=self._convert_decimal(row['roa_dp']),
                fixed_assets=self._convert_decimal(row['fixed_assets']),
                profit_prefin_exp=self._convert_decimal(row['profit_prefin_exp']),
                non_op_profit=self._convert_decimal(row['non_op_profit']),
                op_to_ebt=self._convert_decimal(row['op_to_ebt']),
                nop_to_ebt=self._convert_decimal(row['nop_to_ebt']),
                ocf_to_profit=self._convert_decimal(row['ocf_to_profit']),
                cash_to_liqdebt=self._convert_decimal(row['cash_to_liqdebt']),
                cash_to_liqdebt_withinterest=self._convert_decimal(row['cash_to_liqdebt_withinterest']),
                op_to_liqdebt=self._convert_decimal(row['op_to_liqdebt']),
                op_to_debt=self._convert_decimal(row['op_to_debt']),
                roic_yearly=self._convert_decimal(row['roic_yearly']),
                total_fa_trun=self._convert_decimal(row['total_fa_trun']),
                profit_to_op=self._convert_decimal(row['profit_to_op']),
                q_opincome=self._convert_decimal(row['q_opincome']),
                q_investincome=self._convert_decimal(row['q_investincome']),
                q_dtprofit=self._convert_decimal(row['q_dtprofit']),
                q_eps=self._convert_decimal(row['q_eps']),
                q_netprofit_margin=self._convert_decimal(row['q_netprofit_margin']),
                q_gsprofit_margin=self._convert_decimal(row['q_gsprofit_margin']),
                q_exp_to_sales=self._convert_decimal(row['q_exp_to_sales']),
                q_profit_to_gr=self._convert_decimal(row['q_profit_to_gr']),
                q_saleexp_to_gr=self._convert_decimal(row['q_saleexp_to_gr']),
                q_adminexp_to_gr=self._convert_decimal(row['q_adminexp_to_gr']),
                q_finaexp_to_gr=self._convert_decimal(row['q_finaexp_to_gr']),
                q_impair_to_gr_ttm=self._convert_decimal(row['q_impair_to_gr_ttm']),
                q_gc_to_gr=self._convert_decimal(row['q_gc_to_gr']),
                q_op_to_gr=self._convert_decimal(row['q_op_to_gr']),
                q_roe=self._convert_decimal(row['q_roe']),
                q_dt_roe=self._convert_decimal(row['q_dt_roe']),
                q_npta=self._convert_decimal(row['q_npta']),
                q_opincome_to_ebt=self._convert_decimal(row['q_opincome_to_ebt']),
                q_investincome_to_ebt=self._convert_decimal(row['q_investincome_to_ebt']),
                q_dtprofit_to_profit=self._convert_decimal(row['q_dtprofit_to_profit']),
                q_salescash_to_or=self._convert_decimal(row['q_salescash_to_or']),
                q_ocf_to_sales=self._convert_decimal(row['q_ocf_to_sales']),
                q_ocf_to_or=self._convert_decimal(row['q_ocf_to_or']),
                basic_eps_yoy=self._convert_decimal(row['basic_eps_yoy']),
                dt_eps_yoy=self._convert_decimal(row['dt_eps_yoy']),
                cfps_yoy=self._convert_decimal(row['cfps_yoy']),
                op_yoy=self._convert_decimal(row['op_yoy']),
                ebt_yoy=self._convert_decimal(row['ebt_yoy']),
                netprofit_yoy=self._convert_decimal(row['netprofit_yoy']),
                dt_netprofit_yoy=self._convert_decimal(row['dt_netprofit_yoy']),
                ocf_yoy=self._convert_decimal(row['ocf_yoy']),
                roe_yoy=self._convert_decimal(row['roe_yoy']),
                bps_yoy=self._convert_decimal(row['bps_yoy']),
                assets_yoy=self._convert_decimal(row['assets_yoy']),
                eqt_yoy=self._convert_decimal(row['eqt_yoy']),
                tr_yoy=self._convert_decimal(row['tr_yoy']),
                or_yoy=self._convert_decimal(row['or_yoy']),
                q_gr_yoy=self._convert_decimal(row['q_gr_yoy']),
                q_gr_qoq=self._convert_decimal(row['q_gr_qoq']),
                q_sales_yoy=self._convert_decimal(row['q_sales_yoy']),
                q_sales_qoq=self._convert_decimal(row['q_sales_qoq']),
                q_op_yoy=self._convert_decimal(row['q_op_yoy']),
                q_op_qoq=self._convert_decimal(row['q_op_qoq']),
                q_profit_yoy=self._convert_decimal(row['q_profit_yoy']),
                q_profit_qoq=self._convert_decimal(row['q_profit_qoq']),
                q_netprofit_yoy=self._convert_decimal(row['q_netprofit_yoy']),
                q_netprofit_qoq=self._convert_decimal(row['q_netprofit_qoq']),
                equity_yoy=self._convert_decimal(row['equity_yoy']),
                rd_exp=self._convert_decimal(row['rd_exp']),
                update_flag=row['update_flag'],
            )
            indicators.append(indicator)
            
        return indicators
        
    def fetch_financial_reports(self, ts_code: str, start_date: date = None, end_date: date = None) -> List[FinancialReport]:
        """
        同步完整财务报告
        
        Args:
            ts_code: 股票代码
            start_date: 开始日期，格式：YYYYMMDD
            end_date: 结束日期，格式：YYYYMMDD
            
        Returns:
            List[FinancialReport]: 财务报告列表
        """
        if not start_date:
            start_date = date(1990, 1, 1)
        if not end_date:
            end_date = datetime.today()
            
        income_statements = self.fetch_income_statement(ts_code, start_date, end_date)
        balance_sheets = self.fetch_balance_sheet(ts_code, start_date, end_date)
        cash_flows = self.fetch_cash_flow(ts_code, start_date, end_date)
        indicators = self.fetch_financial_indicators(ts_code, start_date, end_date)
        
        # 按报告期和类型匹配各报表数据
        reports = []
        for statement in income_statements:
            report = FinancialReport(
                ts_code=ts_code,
                report_date=statement.end_date,
                report_type=statement.report_type,
                end_type=statement.end_type,
                income_statement=statement,
                balance_sheet=next((s for s in balance_sheets 
                    if s.end_date == statement.end_date 
                    and s.report_type == statement.report_type), None),
                cash_flow_statement=next((s for s in cash_flows 
                    if s.end_date == statement.end_date 
                    and s.report_type == statement.report_type), None),
                financial_indicators=next((s for s in indicators 
                    if s.end_date == statement.end_date), None)
            )
            reports.append(report)
            
        return reports
